#!/bin/bash

# Copyright (c) 2017 SUSE Linux GmbH
#
# This file is part of cloud-netconfig.
#
# cloud-netconfig is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cloud-netconfig is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License

METADATA_BASE_URL="http://169.254.169.254/metadata/instance/network/interface/"
URL_HDR="Metadata:true"
URL_APX='?format=text&api-version=2017-08-01'

# -------------------------------------------------------------------
# get the MAC address from the metadata server
# format is uppercase without semicolons
# 
get_iface_mac()
{
    local if_idx="$1"
    test -z "$if_idx" && return

    curl -H "$URL_HDR" "${METADATA_BASE_URL}${if_idx}/macAddress${URL_APX}" 2>/dev/null
}

# -------------------------------------------------------------------
# gets all IPv4 address from the Azure metadata server for given
# interface index
# 
get_ipv4_addresses_by_index()
{
    local if_idx="$1" count=0 prefixlen="$2"
    test -z "$if_idx" && return

    curl -H "$URL_HDR" "${METADATA_BASE_URL}${if_idx}/ipv4/ipAddress/${URL_APX}" 2>/dev/null | \
    while read idx || [[ -n "$idx" ]] ; do
        [[ $count -ge 1 ]] && echo -n " "
        curl -H "$URL_HDR" "${METADATA_BASE_URL}${if_idx}/ipv4/ipAddress/${idx}/privateIpAddress${URL_APX}" 2>/dev/null
        echo -n "/"
        curl -H "$URL_HDR" "${METADATA_BASE_URL}${if_idx}/ipv4/subnet/0/prefix${URL_APX}" 2>/dev/null
        count=$((count+1))
    done
}

# -------------------------------------------------------------------
# get IPv4 address from the Azure metadata server and return them
# 
get_ipv4_addresses_from_metadata()
{
    local idx hwaddr="$1"
    test -z "$hwaddr" && return 1

    local oldopt=$(shopt -p nocasematch)
    shopt -s nocasematch
    curl -H "$URL_HDR" "${METADATA_BASE_URL}${URL_APX}" 2>/dev/null | \
    while read idx || [[ -n "$idx" ]] ; do
        if [[ "$(get_iface_mac $idx)" == "${hwaddr//:/}" ]]; then
            get_ipv4_addresses_by_index $idx
        fi
    done
    eval "$oldopt"
}

# -------------------------------------------------------------------
# check whether metadata server is available
# 
metadata_available()
{
    local resp=$(curl -H "$URL_HDR" "http://169.254.169.254/metadata${URL_APX}" 2>/dev/null)
    [[ "$resp" == *instance/* ]]
    return $?
}

